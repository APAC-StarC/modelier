  version: '3'

  services:
    db:
      image: postgres:9.6
      ports:
        - 5432
      volumes:
        - .:/code
      environment:
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      networks:
        - "postgres-network"
    web:
      build: .
      command: python manage.py runserver 0.0.0.0:8000
      volumes:
        - .:/code
      ports:
        - "8001:8000"
      depends_on:
        - db
      links:
        - "db:db"

      networks:
        - "postgres-network"

  volumes:
    pg_data:
  networks:
    postgres-network:

version: '3.7'

services:
  web:
    build: ./app
    command: gunicorn modelier.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./app/:/usr/src/app/
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    expose:
      - 8000
    env_file:
      - .env-prod
    environment:
      - SECRET_KEY=please_change_me
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=postgres
      - SQL_USER=postgres
      - SQL_PASSWORD=postgres
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
      - USE_S3=TRUE
      - AWS_ACCESS_KEY_ID=UPDATE_ME
      - AWS_SECRET_ACCESS_KEY=UPDATE_ME
      - AWS_STORAGE_BUCKET_NAME=UPDATE_ME
    depends_on:
      - db
  db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume: